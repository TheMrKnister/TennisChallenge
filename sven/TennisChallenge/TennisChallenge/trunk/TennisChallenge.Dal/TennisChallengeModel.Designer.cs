//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK_Booking_Court", "Court", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.Court), "BookingBase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Booking), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK_BookingBase_Member_0", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.Member), "BookingBase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Booking), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK_BookingBase_Member_1", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Member), "BookingBase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Booking), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK_BookingBase_Member_2", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Member), "BookingBase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Booking), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK_BookingBase_Member_3", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Member), "BookingBase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Booking), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK_Court_Club", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.Club), "Court", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Court), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK_Member_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Country), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Member), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__Member__Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.User), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Member), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK_Member_Title", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Title), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Member), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK_Rfid_Member", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Member), "Rfid", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Rfid), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__UsersInCl__ClubF__7E8CC4B1", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.Club), "UsersInClub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.UsersInClub), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__UsersInCl__UserF__7D98A078", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.User), "UsersInClub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.UsersInClub), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "UsersInClubRole", "UsersInClub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.UsersInClub), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Role))]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__Advertise__ClubK__74CE504D", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.Club), "Advertisement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Advertisement), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__NewsFeeds__ClubK__7A8729A3", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.Club), "NewsFeed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.NewsFeed), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__Advertise__Adver__190BB0C3", "Advertisement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.Advertisement), "AdvertisementShowing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.AdvertisementShowing), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__NewsFeedS__NewsF__2B2A60FE", "NewsFeed", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.NewsFeed), "NewsFeedShowing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.NewsFeedShowing), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__BookingBa__Booki__45DE573A", "BookingSery", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.BookingSeries), "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Booking), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__RankedGam__Booki__4E3E9311", "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Booking), "RankedGame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.RankedGame), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__RankedGam__Winne__4F32B74A", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Member), "RankedGame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.RankedGame), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__RankedMem__Ranke__45A94D10", "UsersInClub", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.UsersInClub), "RankedMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.RankedMember), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__BookingBa__Tourn__770B9E7A", "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Tournament), "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Booking), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__Member__Tourname__77FFC2B3", "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Tournament), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Member), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__Tournamen__Ladde__76177A41", "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.Tournament), "TournamentLadder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.TournamentLadder), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__UserAd__UserInCl__7246E95D", "UsersInClub", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.UsersInClub), "UserAd", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.UserAd), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__Bank__MemberFk__67C95AEA", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TennisChallenge.Dal.Member), "Bank", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.Bank), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__Tournamen__Membe__186C9245", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.Member), "TournamentMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.TournamentMember), true)]
[assembly: EdmRelationshipAttribute("TennisChallengeModel", "FK__Tournamen__Tourn__1960B67E", "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TennisChallenge.Dal.Tournament), "TournamentMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TennisChallenge.Dal.TournamentMember), true)]

#endregion

namespace TennisChallenge.Dal
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TennisChallengeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TennisChallengeEntities object using the connection string found in the 'TennisChallengeEntities' section of the application configuration file.
        /// </summary>
        public TennisChallengeEntities() : base("name=TennisChallengeEntities", "TennisChallengeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TennisChallengeEntities object.
        /// </summary>
        public TennisChallengeEntities(string connectionString) : base(connectionString, "TennisChallengeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TennisChallengeEntities object.
        /// </summary>
        public TennisChallengeEntities(EntityConnection connection) : base(connection, "TennisChallengeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Booking> Bookings
        {
            get
            {
                if ((_Bookings == null))
                {
                    _Bookings = base.CreateObjectSet<Booking>("Bookings");
                }
                return _Bookings;
            }
        }
        private ObjectSet<Booking> _Bookings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Club> Clubs
        {
            get
            {
                if ((_Clubs == null))
                {
                    _Clubs = base.CreateObjectSet<Club>("Clubs");
                }
                return _Clubs;
            }
        }
        private ObjectSet<Club> _Clubs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Court> Courts
        {
            get
            {
                if ((_Courts == null))
                {
                    _Courts = base.CreateObjectSet<Court>("Courts");
                }
                return _Courts;
            }
        }
        private ObjectSet<Court> _Courts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> Members
        {
            get
            {
                if ((_Members == null))
                {
                    _Members = base.CreateObjectSet<Member>("Members");
                }
                return _Members;
            }
        }
        private ObjectSet<Member> _Members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rfid> Rfids
        {
            get
            {
                if ((_Rfids == null))
                {
                    _Rfids = base.CreateObjectSet<Rfid>("Rfids");
                }
                return _Rfids;
            }
        }
        private ObjectSet<Rfid> _Rfids;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Title> Titles
        {
            get
            {
                if ((_Titles == null))
                {
                    _Titles = base.CreateObjectSet<Title>("Titles");
                }
                return _Titles;
            }
        }
        private ObjectSet<Title> _Titles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersInClub> UsersInClubs
        {
            get
            {
                if ((_UsersInClubs == null))
                {
                    _UsersInClubs = base.CreateObjectSet<UsersInClub>("UsersInClubs");
                }
                return _UsersInClubs;
            }
        }
        private ObjectSet<UsersInClub> _UsersInClubs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Advertisement> Advertisements
        {
            get
            {
                if ((_Advertisements == null))
                {
                    _Advertisements = base.CreateObjectSet<Advertisement>("Advertisements");
                }
                return _Advertisements;
            }
        }
        private ObjectSet<Advertisement> _Advertisements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NewsFeed> NewsFeeds
        {
            get
            {
                if ((_NewsFeeds == null))
                {
                    _NewsFeeds = base.CreateObjectSet<NewsFeed>("NewsFeeds");
                }
                return _NewsFeeds;
            }
        }
        private ObjectSet<NewsFeed> _NewsFeeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdvertisementShowing> AdvertisementShowings
        {
            get
            {
                if ((_AdvertisementShowings == null))
                {
                    _AdvertisementShowings = base.CreateObjectSet<AdvertisementShowing>("AdvertisementShowings");
                }
                return _AdvertisementShowings;
            }
        }
        private ObjectSet<AdvertisementShowing> _AdvertisementShowings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NewsFeedShowing> NewsFeedShowings
        {
            get
            {
                if ((_NewsFeedShowings == null))
                {
                    _NewsFeedShowings = base.CreateObjectSet<NewsFeedShowing>("NewsFeedShowings");
                }
                return _NewsFeedShowings;
            }
        }
        private ObjectSet<NewsFeedShowing> _NewsFeedShowings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BookingSeries> BookingSeries1
        {
            get
            {
                if ((_BookingSeries1 == null))
                {
                    _BookingSeries1 = base.CreateObjectSet<BookingSeries>("BookingSeries1");
                }
                return _BookingSeries1;
            }
        }
        private ObjectSet<BookingSeries> _BookingSeries1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RankedGame> RankedGames
        {
            get
            {
                if ((_RankedGames == null))
                {
                    _RankedGames = base.CreateObjectSet<RankedGame>("RankedGames");
                }
                return _RankedGames;
            }
        }
        private ObjectSet<RankedGame> _RankedGames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RankedMember> RankedMembers
        {
            get
            {
                if ((_RankedMembers == null))
                {
                    _RankedMembers = base.CreateObjectSet<RankedMember>("RankedMembers");
                }
                return _RankedMembers;
            }
        }
        private ObjectSet<RankedMember> _RankedMembers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TournamentLadder> TournamentLadders
        {
            get
            {
                if ((_TournamentLadders == null))
                {
                    _TournamentLadders = base.CreateObjectSet<TournamentLadder>("TournamentLadders");
                }
                return _TournamentLadders;
            }
        }
        private ObjectSet<TournamentLadder> _TournamentLadders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tournament> Tournaments
        {
            get
            {
                if ((_Tournaments == null))
                {
                    _Tournaments = base.CreateObjectSet<Tournament>("Tournaments");
                }
                return _Tournaments;
            }
        }
        private ObjectSet<Tournament> _Tournaments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAd> UserAds
        {
            get
            {
                if ((_UserAds == null))
                {
                    _UserAds = base.CreateObjectSet<UserAd>("UserAds");
                }
                return _UserAds;
            }
        }
        private ObjectSet<UserAd> _UserAds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bank> Banks
        {
            get
            {
                if ((_Banks == null))
                {
                    _Banks = base.CreateObjectSet<Bank>("Banks");
                }
                return _Banks;
            }
        }
        private ObjectSet<Bank> _Banks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TournamentMember> TournamentMembers
        {
            get
            {
                if ((_TournamentMembers == null))
                {
                    _TournamentMembers = base.CreateObjectSet<TournamentMember>("TournamentMembers");
                }
                return _TournamentMembers;
            }
        }
        private ObjectSet<TournamentMember> _TournamentMembers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bookings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookings(Booking booking)
        {
            base.AddObject("Bookings", booking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clubs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClubs(Club club)
        {
            base.AddObject("Clubs", club);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Courts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourts(Court court)
        {
            base.AddObject("Courts", court);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembers(Member member)
        {
            base.AddObject("Members", member);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rfids EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRfids(Rfid rfid)
        {
            base.AddObject("Rfids", rfid);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Titles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitles(Title title)
        {
            base.AddObject("Titles", title);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersInClubs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersInClubs(UsersInClub usersInClub)
        {
            base.AddObject("UsersInClubs", usersInClub);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Advertisements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertisements(Advertisement advertisement)
        {
            base.AddObject("Advertisements", advertisement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NewsFeeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNewsFeeds(NewsFeed newsFeed)
        {
            base.AddObject("NewsFeeds", newsFeed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdvertisementShowings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertisementShowings(AdvertisementShowing advertisementShowing)
        {
            base.AddObject("AdvertisementShowings", advertisementShowing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NewsFeedShowings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNewsFeedShowings(NewsFeedShowing newsFeedShowing)
        {
            base.AddObject("NewsFeedShowings", newsFeedShowing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BookingSeries1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookingSeries1(BookingSeries bookingSeries)
        {
            base.AddObject("BookingSeries1", bookingSeries);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RankedGames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRankedGames(RankedGame rankedGame)
        {
            base.AddObject("RankedGames", rankedGame);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RankedMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRankedMembers(RankedMember rankedMember)
        {
            base.AddObject("RankedMembers", rankedMember);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TournamentLadders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTournamentLadders(TournamentLadder tournamentLadder)
        {
            base.AddObject("TournamentLadders", tournamentLadder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tournaments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTournaments(Tournament tournament)
        {
            base.AddObject("Tournaments", tournament);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAds(UserAd userAd)
        {
            base.AddObject("UserAds", userAd);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Banks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBanks(Bank bank)
        {
            base.AddObject("Banks", bank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TournamentMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTournamentMembers(TournamentMember tournamentMember)
        {
            base.AddObject("TournamentMembers", tournamentMember);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Advertisement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Advertisement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Advertisement object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="imageUrl">Initial value of the ImageUrl property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="monday">Initial value of the Monday property.</param>
        /// <param name="tuesday">Initial value of the Tuesday property.</param>
        /// <param name="wednesday">Initial value of the Wednesday property.</param>
        /// <param name="thursday">Initial value of the Thursday property.</param>
        /// <param name="friday">Initial value of the Friday property.</param>
        /// <param name="saturday">Initial value of the Saturday property.</param>
        /// <param name="sunday">Initial value of the Sunday property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="clubKey">Initial value of the ClubKey property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        public static Advertisement CreateAdvertisement(global::System.Guid id, global::System.String name, global::System.String imageUrl, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Boolean monday, global::System.Boolean tuesday, global::System.Boolean wednesday, global::System.Boolean thursday, global::System.Boolean friday, global::System.Boolean saturday, global::System.Boolean sunday, global::System.Boolean active, global::System.Guid clubKey, global::System.Int32 duration)
        {
            Advertisement advertisement = new Advertisement();
            advertisement.Id = id;
            advertisement.Name = name;
            advertisement.ImageUrl = imageUrl;
            advertisement.StartTime = startTime;
            advertisement.EndTime = endTime;
            advertisement.Monday = monday;
            advertisement.Tuesday = tuesday;
            advertisement.Wednesday = wednesday;
            advertisement.Thursday = thursday;
            advertisement.Friday = friday;
            advertisement.Saturday = saturday;
            advertisement.Sunday = sunday;
            advertisement.Active = active;
            advertisement.ClubKey = clubKey;
            advertisement.Duration = duration;
            return advertisement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Monday
        {
            get
            {
                return _Monday;
            }
            set
            {
                OnMondayChanging(value);
                ReportPropertyChanging("Monday");
                _Monday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Monday");
                OnMondayChanged();
            }
        }
        private global::System.Boolean _Monday;
        partial void OnMondayChanging(global::System.Boolean value);
        partial void OnMondayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Tuesday
        {
            get
            {
                return _Tuesday;
            }
            set
            {
                OnTuesdayChanging(value);
                ReportPropertyChanging("Tuesday");
                _Tuesday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tuesday");
                OnTuesdayChanged();
            }
        }
        private global::System.Boolean _Tuesday;
        partial void OnTuesdayChanging(global::System.Boolean value);
        partial void OnTuesdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Wednesday
        {
            get
            {
                return _Wednesday;
            }
            set
            {
                OnWednesdayChanging(value);
                ReportPropertyChanging("Wednesday");
                _Wednesday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Wednesday");
                OnWednesdayChanged();
            }
        }
        private global::System.Boolean _Wednesday;
        partial void OnWednesdayChanging(global::System.Boolean value);
        partial void OnWednesdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Thursday
        {
            get
            {
                return _Thursday;
            }
            set
            {
                OnThursdayChanging(value);
                ReportPropertyChanging("Thursday");
                _Thursday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Thursday");
                OnThursdayChanged();
            }
        }
        private global::System.Boolean _Thursday;
        partial void OnThursdayChanging(global::System.Boolean value);
        partial void OnThursdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Friday
        {
            get
            {
                return _Friday;
            }
            set
            {
                OnFridayChanging(value);
                ReportPropertyChanging("Friday");
                _Friday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Friday");
                OnFridayChanged();
            }
        }
        private global::System.Boolean _Friday;
        partial void OnFridayChanging(global::System.Boolean value);
        partial void OnFridayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Saturday
        {
            get
            {
                return _Saturday;
            }
            set
            {
                OnSaturdayChanging(value);
                ReportPropertyChanging("Saturday");
                _Saturday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Saturday");
                OnSaturdayChanged();
            }
        }
        private global::System.Boolean _Saturday;
        partial void OnSaturdayChanging(global::System.Boolean value);
        partial void OnSaturdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Sunday
        {
            get
            {
                return _Sunday;
            }
            set
            {
                OnSundayChanging(value);
                ReportPropertyChanging("Sunday");
                _Sunday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sunday");
                OnSundayChanged();
            }
        }
        private global::System.Boolean _Sunday;
        partial void OnSundayChanging(global::System.Boolean value);
        partial void OnSundayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClubKey
        {
            get
            {
                return _ClubKey;
            }
            set
            {
                OnClubKeyChanging(value);
                ReportPropertyChanging("ClubKey");
                _ClubKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubKey");
                OnClubKeyChanged();
            }
        }
        private global::System.Guid _ClubKey;
        partial void OnClubKeyChanging(global::System.Guid value);
        partial void OnClubKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int32 _Duration;
        partial void OnDurationChanging(global::System.Int32 value);
        partial void OnDurationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Advertise__ClubK__74CE504D", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK__Advertise__ClubK__74CE504D", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK__Advertise__ClubK__74CE504D", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK__Advertise__ClubK__74CE504D", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("TennisChallengeModel.FK__Advertise__ClubK__74CE504D", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Advertise__Adver__190BB0C3", "AdvertisementShowing")]
        public EntityCollection<AdvertisementShowing> AdvertisementShowings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdvertisementShowing>("TennisChallengeModel.FK__Advertise__Adver__190BB0C3", "AdvertisementShowing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdvertisementShowing>("TennisChallengeModel.FK__Advertise__Adver__190BB0C3", "AdvertisementShowing", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="AdvertisementShowing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdvertisementShowing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvertisementShowing object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="showed">Initial value of the Showed property.</param>
        /// <param name="advertisementFk">Initial value of the AdvertisementFk property.</param>
        public static AdvertisementShowing CreateAdvertisementShowing(global::System.Guid id, global::System.DateTime showed, global::System.Guid advertisementFk)
        {
            AdvertisementShowing advertisementShowing = new AdvertisementShowing();
            advertisementShowing.Id = id;
            advertisementShowing.Showed = showed;
            advertisementShowing.AdvertisementFk = advertisementFk;
            return advertisementShowing;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Showed
        {
            get
            {
                return _Showed;
            }
            set
            {
                OnShowedChanging(value);
                ReportPropertyChanging("Showed");
                _Showed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Showed");
                OnShowedChanged();
            }
        }
        private global::System.DateTime _Showed;
        partial void OnShowedChanging(global::System.DateTime value);
        partial void OnShowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AdvertisementFk
        {
            get
            {
                return _AdvertisementFk;
            }
            set
            {
                OnAdvertisementFkChanging(value);
                ReportPropertyChanging("AdvertisementFk");
                _AdvertisementFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertisementFk");
                OnAdvertisementFkChanged();
            }
        }
        private global::System.Guid _AdvertisementFk;
        partial void OnAdvertisementFkChanging(global::System.Guid value);
        partial void OnAdvertisementFkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Advertise__Adver__190BB0C3", "Advertisement")]
        public Advertisement Advertisement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advertisement>("TennisChallengeModel.FK__Advertise__Adver__190BB0C3", "Advertisement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advertisement>("TennisChallengeModel.FK__Advertise__Adver__190BB0C3", "Advertisement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Advertisement> AdvertisementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advertisement>("TennisChallengeModel.FK__Advertise__Adver__190BB0C3", "Advertisement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Advertisement>("TennisChallengeModel.FK__Advertise__Adver__190BB0C3", "Advertisement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Bank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bank object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        public static Bank CreateBank(global::System.Guid transactionId)
        {
            Bank bank = new Bank();
            bank.TransactionId = transactionId;
            return bank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Guid _TransactionId;
        partial void OnTransactionIdChanging(global::System.Guid value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MemberFk
        {
            get
            {
                return _MemberFk;
            }
            set
            {
                OnMemberFkChanging(value);
                ReportPropertyChanging("MemberFk");
                _MemberFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberFk");
                OnMemberFkChanged();
            }
        }
        private Nullable<global::System.Guid> _MemberFk;
        partial void OnMemberFkChanging(Nullable<global::System.Guid> value);
        partial void OnMemberFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDate;
        partial void OnTransactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ValueAmount
        {
            get
            {
                return _ValueAmount;
            }
            set
            {
                OnValueAmountChanging(value);
                ReportPropertyChanging("ValueAmount");
                _ValueAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueAmount");
                OnValueAmountChanged();
            }
        }
        private Nullable<global::System.Double> _ValueAmount;
        partial void OnValueAmountChanging(Nullable<global::System.Double> value);
        partial void OnValueAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Bank__MemberFk__67C95AEA", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__Bank__MemberFk__67C95AEA", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__Bank__MemberFk__67C95AEA", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__Bank__MemberFk__67C95AEA", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("TennisChallengeModel.FK__Bank__MemberFk__67C95AEA", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Booking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Booking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Booking object.
        /// </summary>
        /// <param name="bookingKey">Initial value of the BookingKey property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="courtFk">Initial value of the CourtFk property.</param>
        /// <param name="member0Fk">Initial value of the Member0Fk property.</param>
        /// <param name="bookingType">Initial value of the BookingType property.</param>
        public static Booking CreateBooking(global::System.Guid bookingKey, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Guid courtFk, global::System.Guid member0Fk, global::System.Int32 bookingType)
        {
            Booking booking = new Booking();
            booking.BookingKey = bookingKey;
            booking.StartTime = startTime;
            booking.EndTime = endTime;
            booking.CourtFk = courtFk;
            booking.Member0Fk = member0Fk;
            booking.BookingType = bookingType;
            return booking;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BookingKey
        {
            get
            {
                return _BookingKey;
            }
            set
            {
                if (_BookingKey != value)
                {
                    OnBookingKeyChanging(value);
                    ReportPropertyChanging("BookingKey");
                    _BookingKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BookingKey");
                    OnBookingKeyChanged();
                }
            }
        }
        private global::System.Guid _BookingKey;
        partial void OnBookingKeyChanging(global::System.Guid value);
        partial void OnBookingKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CourtFk
        {
            get
            {
                return _CourtFk;
            }
            set
            {
                OnCourtFkChanging(value);
                ReportPropertyChanging("CourtFk");
                _CourtFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourtFk");
                OnCourtFkChanged();
            }
        }
        private global::System.Guid _CourtFk;
        partial void OnCourtFkChanging(global::System.Guid value);
        partial void OnCourtFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Member0Fk
        {
            get
            {
                return _Member0Fk;
            }
            set
            {
                OnMember0FkChanging(value);
                ReportPropertyChanging("Member0Fk");
                _Member0Fk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Member0Fk");
                OnMember0FkChanged();
            }
        }
        private global::System.Guid _Member0Fk;
        partial void OnMember0FkChanging(global::System.Guid value);
        partial void OnMember0FkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Member1Fk
        {
            get
            {
                return _Member1Fk;
            }
            set
            {
                OnMember1FkChanging(value);
                ReportPropertyChanging("Member1Fk");
                _Member1Fk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Member1Fk");
                OnMember1FkChanged();
            }
        }
        private Nullable<global::System.Guid> _Member1Fk;
        partial void OnMember1FkChanging(Nullable<global::System.Guid> value);
        partial void OnMember1FkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Member2Fk
        {
            get
            {
                return _Member2Fk;
            }
            set
            {
                OnMember2FkChanging(value);
                ReportPropertyChanging("Member2Fk");
                _Member2Fk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Member2Fk");
                OnMember2FkChanged();
            }
        }
        private Nullable<global::System.Guid> _Member2Fk;
        partial void OnMember2FkChanging(Nullable<global::System.Guid> value);
        partial void OnMember2FkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Member3Fk
        {
            get
            {
                return _Member3Fk;
            }
            set
            {
                OnMember3FkChanging(value);
                ReportPropertyChanging("Member3Fk");
                _Member3Fk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Member3Fk");
                OnMember3FkChanged();
            }
        }
        private Nullable<global::System.Guid> _Member3Fk;
        partial void OnMember3FkChanging(Nullable<global::System.Guid> value);
        partial void OnMember3FkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingType
        {
            get
            {
                return _BookingType;
            }
            set
            {
                OnBookingTypeChanging(value);
                ReportPropertyChanging("BookingType");
                _BookingType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingType");
                OnBookingTypeChanged();
            }
        }
        private global::System.Int32 _BookingType;
        partial void OnBookingTypeChanging(global::System.Int32 value);
        partial void OnBookingTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BookingSeriesFk
        {
            get
            {
                return _BookingSeriesFk;
            }
            set
            {
                OnBookingSeriesFkChanging(value);
                ReportPropertyChanging("BookingSeriesFk");
                _BookingSeriesFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingSeriesFk");
                OnBookingSeriesFkChanged();
            }
        }
        private Nullable<global::System.Guid> _BookingSeriesFk;
        partial void OnBookingSeriesFkChanging(Nullable<global::System.Guid> value);
        partial void OnBookingSeriesFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TournamentId
        {
            get
            {
                return _TournamentId;
            }
            set
            {
                OnTournamentIdChanging(value);
                ReportPropertyChanging("TournamentId");
                _TournamentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentId");
                OnTournamentIdChanged();
            }
        }
        private Nullable<global::System.Guid> _TournamentId;
        partial void OnTournamentIdChanging(Nullable<global::System.Guid> value);
        partial void OnTournamentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TournamentRound
        {
            get
            {
                return _TournamentRound;
            }
            set
            {
                OnTournamentRoundChanging(value);
                ReportPropertyChanging("TournamentRound");
                _TournamentRound = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentRound");
                OnTournamentRoundChanged();
            }
        }
        private Nullable<global::System.Int32> _TournamentRound;
        partial void OnTournamentRoundChanging(Nullable<global::System.Int32> value);
        partial void OnTournamentRoundChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_Booking_Court", "Court")]
        public Court Court
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Court>("TennisChallengeModel.FK_Booking_Court", "Court").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Court>("TennisChallengeModel.FK_Booking_Court", "Court").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Court> CourtReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Court>("TennisChallengeModel.FK_Booking_Court", "Court");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Court>("TennisChallengeModel.FK_Booking_Court", "Court", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_BookingBase_Member_0", "Member")]
        public Member Member0
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_0", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_0", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> Member0Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_0", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_0", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_BookingBase_Member_1", "Member")]
        public Member Member1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_1", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_1", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> Member1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_1", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_1", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_BookingBase_Member_2", "Member")]
        public Member Member2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_2", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_2", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> Member2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_2", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_2", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_BookingBase_Member_3", "Member")]
        public Member Member3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_3", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_3", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> Member3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_3", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("TennisChallengeModel.FK_BookingBase_Member_3", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__BookingBa__Booki__45DE573A", "BookingSery")]
        public BookingSeries BookingSeries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BookingSeries>("TennisChallengeModel.FK__BookingBa__Booki__45DE573A", "BookingSery").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BookingSeries>("TennisChallengeModel.FK__BookingBa__Booki__45DE573A", "BookingSery").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BookingSeries> BookingSeriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BookingSeries>("TennisChallengeModel.FK__BookingBa__Booki__45DE573A", "BookingSery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BookingSeries>("TennisChallengeModel.FK__BookingBa__Booki__45DE573A", "BookingSery", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__RankedGam__Booki__4E3E9311", "RankedGame")]
        public EntityCollection<RankedGame> RankedGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RankedGame>("TennisChallengeModel.FK__RankedGam__Booki__4E3E9311", "RankedGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RankedGame>("TennisChallengeModel.FK__RankedGam__Booki__4E3E9311", "RankedGame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__BookingBa__Tourn__770B9E7A", "Tournament")]
        public Tournament Tournament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__BookingBa__Tourn__770B9E7A", "Tournament").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__BookingBa__Tourn__770B9E7A", "Tournament").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tournament> TournamentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__BookingBa__Tourn__770B9E7A", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tournament>("TennisChallengeModel.FK__BookingBa__Tourn__770B9E7A", "Tournament", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="BookingSeries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BookingSeries : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BookingSeries object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BookingSeries CreateBookingSeries(global::System.Guid id, global::System.String name)
        {
            BookingSeries bookingSeries = new BookingSeries();
            bookingSeries.Id = id;
            bookingSeries.Name = name;
            return bookingSeries;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__BookingBa__Booki__45DE573A", "Booking")]
        public EntityCollection<Booking> Bookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("TennisChallengeModel.FK__BookingBa__Booki__45DE573A", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("TennisChallengeModel.FK__BookingBa__Booki__45DE573A", "Booking", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Club")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Club : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Club object.
        /// </summary>
        /// <param name="clubKey">Initial value of the ClubKey property.</param>
        /// <param name="advertisementsPerNewsFeed">Initial value of the AdvertisementsPerNewsFeed property.</param>
        public static Club CreateClub(global::System.Guid clubKey, global::System.Int32 advertisementsPerNewsFeed)
        {
            Club club = new Club();
            club.ClubKey = clubKey;
            club.AdvertisementsPerNewsFeed = advertisementsPerNewsFeed;
            return club;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClubKey
        {
            get
            {
                return _ClubKey;
            }
            set
            {
                if (_ClubKey != value)
                {
                    OnClubKeyChanging(value);
                    ReportPropertyChanging("ClubKey");
                    _ClubKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClubKey");
                    OnClubKeyChanged();
                }
            }
        }
        private global::System.Guid _ClubKey;
        partial void OnClubKeyChanging(global::System.Guid value);
        partial void OnClubKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdvertisementsPerNewsFeed
        {
            get
            {
                return _AdvertisementsPerNewsFeed;
            }
            set
            {
                OnAdvertisementsPerNewsFeedChanging(value);
                ReportPropertyChanging("AdvertisementsPerNewsFeed");
                _AdvertisementsPerNewsFeed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertisementsPerNewsFeed");
                OnAdvertisementsPerNewsFeedChanged();
            }
        }
        private global::System.Int32 _AdvertisementsPerNewsFeed;
        partial void OnAdvertisementsPerNewsFeedChanging(global::System.Int32 value);
        partial void OnAdvertisementsPerNewsFeedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_Court_Club", "Court")]
        public EntityCollection<Court> Courts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Court>("TennisChallengeModel.FK_Court_Club", "Court");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Court>("TennisChallengeModel.FK_Court_Club", "Court", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__UsersInCl__ClubF__7E8CC4B1", "UsersInClub")]
        public EntityCollection<UsersInClub> UsersInClubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInClub>("TennisChallengeModel.FK__UsersInCl__ClubF__7E8CC4B1", "UsersInClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInClub>("TennisChallengeModel.FK__UsersInCl__ClubF__7E8CC4B1", "UsersInClub", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Advertise__ClubK__74CE504D", "Advertisement")]
        public EntityCollection<Advertisement> Advertisements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advertisement>("TennisChallengeModel.FK__Advertise__ClubK__74CE504D", "Advertisement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advertisement>("TennisChallengeModel.FK__Advertise__ClubK__74CE504D", "Advertisement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__NewsFeeds__ClubK__7A8729A3", "NewsFeed")]
        public EntityCollection<NewsFeed> NewsFeeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NewsFeed>("TennisChallengeModel.FK__NewsFeeds__ClubK__7A8729A3", "NewsFeed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NewsFeed>("TennisChallengeModel.FK__NewsFeeds__ClubK__7A8729A3", "NewsFeed", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryKey">Initial value of the CountryKey property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Country CreateCountry(global::System.Int16 countryKey, global::System.String name)
        {
            Country country = new Country();
            country.CountryKey = countryKey;
            country.Name = name;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CountryKey
        {
            get
            {
                return _CountryKey;
            }
            set
            {
                if (_CountryKey != value)
                {
                    OnCountryKeyChanging(value);
                    ReportPropertyChanging("CountryKey");
                    _CountryKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryKey");
                    OnCountryKeyChanged();
                }
            }
        }
        private global::System.Int16 _CountryKey;
        partial void OnCountryKeyChanging(global::System.Int16 value);
        partial void OnCountryKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_Member_Country", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("TennisChallengeModel.FK_Member_Country", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("TennisChallengeModel.FK_Member_Country", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Court")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Court : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Court object.
        /// </summary>
        /// <param name="courtKey">Initial value of the CourtKey property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="clubFk">Initial value of the ClubFk property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="posY">Initial value of the PosY property.</param>
        public static Court CreateCourt(global::System.Guid courtKey, global::System.String name, global::System.Guid clubFk, global::System.Int32 id, global::System.Double posY)
        {
            Court court = new Court();
            court.CourtKey = courtKey;
            court.Name = name;
            court.ClubFk = clubFk;
            court.Id = id;
            court.PosY = posY;
            return court;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CourtKey
        {
            get
            {
                return _CourtKey;
            }
            set
            {
                if (_CourtKey != value)
                {
                    OnCourtKeyChanging(value);
                    ReportPropertyChanging("CourtKey");
                    _CourtKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourtKey");
                    OnCourtKeyChanged();
                }
            }
        }
        private global::System.Guid _CourtKey;
        partial void OnCourtKeyChanging(global::System.Guid value);
        partial void OnCourtKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClubFk
        {
            get
            {
                return _ClubFk;
            }
            set
            {
                OnClubFkChanging(value);
                ReportPropertyChanging("ClubFk");
                _ClubFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubFk");
                OnClubFkChanged();
            }
        }
        private global::System.Guid _ClubFk;
        partial void OnClubFkChanging(global::System.Guid value);
        partial void OnClubFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PosY
        {
            get
            {
                return _PosY;
            }
            set
            {
                OnPosYChanging(value);
                ReportPropertyChanging("PosY");
                _PosY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PosY");
                OnPosYChanged();
            }
        }
        private Nullable<global::System.Double> _PosY;
        partial void OnPosYChanging(Nullable<global::System.Double> value);
        partial void OnPosYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PosX
        {
            get
            {
                return _PosX;
            }
            set
            {
                OnPosXChanging(value);
                ReportPropertyChanging("PosX");
                _PosX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PosX");
                OnPosXChanged();
            }
        }
        private Nullable<global::System.Double> _PosX;
        partial void OnPosXChanging(Nullable<global::System.Double> value);
        partial void OnPosXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Allignment
        {
            get
            {
                return _Allignment;
            }
            set
            {
                OnAllignmentChanging(value);
                ReportPropertyChanging("Allignment");
                _Allignment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Allignment");
                OnAllignmentChanged();
            }
        }
        private global::System.String _Allignment;
        partial void OnAllignmentChanging(global::System.String value);
        partial void OnAllignmentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_Booking_Court", "BookingBase")]
        public EntityCollection<Booking> Bookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("TennisChallengeModel.FK_Booking_Court", "BookingBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("TennisChallengeModel.FK_Booking_Court", "BookingBase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_Court_Club", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK_Court_Club", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK_Court_Club", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK_Court_Club", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("TennisChallengeModel.FK_Court_Club", "Club", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="memberKey">Initial value of the MemberKey property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static Member CreateMember(global::System.Guid memberKey, global::System.Boolean active)
        {
            Member member = new Member();
            member.MemberKey = memberKey;
            member.Active = active;
            return member;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MemberKey
        {
            get
            {
                return _MemberKey;
            }
            set
            {
                if (_MemberKey != value)
                {
                    OnMemberKeyChanging(value);
                    ReportPropertyChanging("MemberKey");
                    _MemberKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberKey");
                    OnMemberKeyChanged();
                }
            }
        }
        private global::System.Guid _MemberKey;
        partial void OnMemberKeyChanging(global::System.Guid value);
        partial void OnMemberKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> TitleFk
        {
            get
            {
                return _TitleFk;
            }
            set
            {
                OnTitleFkChanging(value);
                ReportPropertyChanging("TitleFk");
                _TitleFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleFk");
                OnTitleFkChanged();
            }
        }
        private Nullable<global::System.Int16> _TitleFk;
        partial void OnTitleFkChanging(Nullable<global::System.Int16> value);
        partial void OnTitleFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CountryFk
        {
            get
            {
                return _CountryFk;
            }
            set
            {
                OnCountryFkChanging(value);
                ReportPropertyChanging("CountryFk");
                _CountryFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryFk");
                OnCountryFkChanged();
            }
        }
        private Nullable<global::System.Int16> _CountryFk;
        partial void OnCountryFkChanging(Nullable<global::System.Int16> value);
        partial void OnCountryFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrivatePhone
        {
            get
            {
                return _PrivatePhone;
            }
            set
            {
                OnPrivatePhoneChanging(value);
                ReportPropertyChanging("PrivatePhone");
                _PrivatePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrivatePhone");
                OnPrivatePhoneChanged();
            }
        }
        private global::System.String _PrivatePhone;
        partial void OnPrivatePhoneChanging(global::System.String value);
        partial void OnPrivatePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessPhone
        {
            get
            {
                return _BusinessPhone;
            }
            set
            {
                OnBusinessPhoneChanging(value);
                ReportPropertyChanging("BusinessPhone");
                _BusinessPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessPhone");
                OnBusinessPhoneChanged();
            }
        }
        private global::System.String _BusinessPhone;
        partial void OnBusinessPhoneChanging(global::System.String value);
        partial void OnBusinessPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseNumber
        {
            get
            {
                return _LicenseNumber;
            }
            set
            {
                OnLicenseNumberChanging(value);
                ReportPropertyChanging("LicenseNumber");
                _LicenseNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseNumber");
                OnLicenseNumberChanged();
            }
        }
        private global::System.String _LicenseNumber;
        partial void OnLicenseNumberChanging(global::System.String value);
        partial void OnLicenseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Classification
        {
            get
            {
                return _Classification;
            }
            set
            {
                OnClassificationChanging(value);
                ReportPropertyChanging("Classification");
                _Classification = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Classification");
                OnClassificationChanged();
            }
        }
        private global::System.String _Classification;
        partial void OnClassificationChanging(global::System.String value);
        partial void OnClassificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ClassificationUpdate
        {
            get
            {
                return _ClassificationUpdate;
            }
            set
            {
                OnClassificationUpdateChanging(value);
                ReportPropertyChanging("ClassificationUpdate");
                _ClassificationUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassificationUpdate");
                OnClassificationUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ClassificationUpdate;
        partial void OnClassificationUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnClassificationUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PictureUrl
        {
            get
            {
                return _PictureUrl;
            }
            set
            {
                OnPictureUrlChanging(value);
                ReportPropertyChanging("PictureUrl");
                _PictureUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PictureUrl");
                OnPictureUrlChanged();
            }
        }
        private global::System.String _PictureUrl;
        partial void OnPictureUrlChanging(global::System.String value);
        partial void OnPictureUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TournamentId
        {
            get
            {
                return _TournamentId;
            }
            set
            {
                OnTournamentIdChanging(value);
                ReportPropertyChanging("TournamentId");
                _TournamentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentId");
                OnTournamentIdChanged();
            }
        }
        private Nullable<global::System.Guid> _TournamentId;
        partial void OnTournamentIdChanging(Nullable<global::System.Guid> value);
        partial void OnTournamentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TournamentPoints
        {
            get
            {
                return _TournamentPoints;
            }
            set
            {
                OnTournamentPointsChanging(value);
                ReportPropertyChanging("TournamentPoints");
                _TournamentPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentPoints");
                OnTournamentPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _TournamentPoints;
        partial void OnTournamentPointsChanging(Nullable<global::System.Int32> value);
        partial void OnTournamentPointsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_BookingBase_Member_0", "BookingBase")]
        public EntityCollection<Booking> Bookings0
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("TennisChallengeModel.FK_BookingBase_Member_0", "BookingBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("TennisChallengeModel.FK_BookingBase_Member_0", "BookingBase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_BookingBase_Member_1", "BookingBase")]
        public EntityCollection<Booking> Bookings1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("TennisChallengeModel.FK_BookingBase_Member_1", "BookingBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("TennisChallengeModel.FK_BookingBase_Member_1", "BookingBase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_BookingBase_Member_2", "BookingBase")]
        public EntityCollection<Booking> Bookings2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("TennisChallengeModel.FK_BookingBase_Member_2", "BookingBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("TennisChallengeModel.FK_BookingBase_Member_2", "BookingBase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_BookingBase_Member_3", "BookingBase")]
        public EntityCollection<Booking> Bookings3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("TennisChallengeModel.FK_BookingBase_Member_3", "BookingBase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("TennisChallengeModel.FK_BookingBase_Member_3", "BookingBase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_Member_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TennisChallengeModel.FK_Member_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TennisChallengeModel.FK_Member_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TennisChallengeModel.FK_Member_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("TennisChallengeModel.FK_Member_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Member__Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TennisChallengeModel.FK__Member__Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TennisChallengeModel.FK__Member__Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TennisChallengeModel.FK__Member__Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TennisChallengeModel.FK__Member__Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_Member_Title", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TennisChallengeModel.FK_Member_Title", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TennisChallengeModel.FK_Member_Title", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TennisChallengeModel.FK_Member_Title", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("TennisChallengeModel.FK_Member_Title", "Title", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_Rfid_Member", "Rfid")]
        public EntityCollection<Rfid> Rfids
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rfid>("TennisChallengeModel.FK_Rfid_Member", "Rfid");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rfid>("TennisChallengeModel.FK_Rfid_Member", "Rfid", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__RankedGam__Winne__4F32B74A", "RankedGame")]
        public EntityCollection<RankedGame> RankedGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RankedGame>("TennisChallengeModel.FK__RankedGam__Winne__4F32B74A", "RankedGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RankedGame>("TennisChallengeModel.FK__RankedGam__Winne__4F32B74A", "RankedGame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Member__Tourname__77FFC2B3", "Tournament")]
        public Tournament Tournament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__Member__Tourname__77FFC2B3", "Tournament").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__Member__Tourname__77FFC2B3", "Tournament").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tournament> TournamentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__Member__Tourname__77FFC2B3", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tournament>("TennisChallengeModel.FK__Member__Tourname__77FFC2B3", "Tournament", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Bank__MemberFk__67C95AEA", "Bank")]
        public EntityCollection<Bank> Banks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bank>("TennisChallengeModel.FK__Bank__MemberFk__67C95AEA", "Bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bank>("TennisChallengeModel.FK__Bank__MemberFk__67C95AEA", "Bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Tournamen__Membe__186C9245", "TournamentMember")]
        public EntityCollection<TournamentMember> TournamentMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TournamentMember>("TennisChallengeModel.FK__Tournamen__Membe__186C9245", "TournamentMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TournamentMember>("TennisChallengeModel.FK__Tournamen__Membe__186C9245", "TournamentMember", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="NewsFeed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NewsFeed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NewsFeed object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="clubKey">Initial value of the ClubKey property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        public static NewsFeed CreateNewsFeed(global::System.Guid id, global::System.Boolean active, global::System.Guid clubKey, global::System.Int32 duration)
        {
            NewsFeed newsFeed = new NewsFeed();
            newsFeed.Id = id;
            newsFeed.Active = active;
            newsFeed.ClubKey = clubKey;
            newsFeed.Duration = duration;
            return newsFeed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClubKey
        {
            get
            {
                return _ClubKey;
            }
            set
            {
                OnClubKeyChanging(value);
                ReportPropertyChanging("ClubKey");
                _ClubKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubKey");
                OnClubKeyChanged();
            }
        }
        private global::System.Guid _ClubKey;
        partial void OnClubKeyChanging(global::System.Guid value);
        partial void OnClubKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int32 _Duration;
        partial void OnDurationChanging(global::System.Int32 value);
        partial void OnDurationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__NewsFeeds__ClubK__7A8729A3", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK__NewsFeeds__ClubK__7A8729A3", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK__NewsFeeds__ClubK__7A8729A3", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK__NewsFeeds__ClubK__7A8729A3", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("TennisChallengeModel.FK__NewsFeeds__ClubK__7A8729A3", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__NewsFeedS__NewsF__2B2A60FE", "NewsFeedShowing")]
        public EntityCollection<NewsFeedShowing> NewsFeedShowings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NewsFeedShowing>("TennisChallengeModel.FK__NewsFeedS__NewsF__2B2A60FE", "NewsFeedShowing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NewsFeedShowing>("TennisChallengeModel.FK__NewsFeedS__NewsF__2B2A60FE", "NewsFeedShowing", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="NewsFeedShowing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NewsFeedShowing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NewsFeedShowing object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="showed">Initial value of the Showed property.</param>
        /// <param name="newsFeedFk">Initial value of the NewsFeedFk property.</param>
        public static NewsFeedShowing CreateNewsFeedShowing(global::System.Guid id, global::System.DateTime showed, global::System.Guid newsFeedFk)
        {
            NewsFeedShowing newsFeedShowing = new NewsFeedShowing();
            newsFeedShowing.Id = id;
            newsFeedShowing.Showed = showed;
            newsFeedShowing.NewsFeedFk = newsFeedFk;
            return newsFeedShowing;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Showed
        {
            get
            {
                return _Showed;
            }
            set
            {
                OnShowedChanging(value);
                ReportPropertyChanging("Showed");
                _Showed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Showed");
                OnShowedChanged();
            }
        }
        private global::System.DateTime _Showed;
        partial void OnShowedChanging(global::System.DateTime value);
        partial void OnShowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NewsFeedFk
        {
            get
            {
                return _NewsFeedFk;
            }
            set
            {
                OnNewsFeedFkChanging(value);
                ReportPropertyChanging("NewsFeedFk");
                _NewsFeedFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewsFeedFk");
                OnNewsFeedFkChanged();
            }
        }
        private global::System.Guid _NewsFeedFk;
        partial void OnNewsFeedFkChanging(global::System.Guid value);
        partial void OnNewsFeedFkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__NewsFeedS__NewsF__2B2A60FE", "NewsFeed")]
        public NewsFeed NewsFeed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NewsFeed>("TennisChallengeModel.FK__NewsFeedS__NewsF__2B2A60FE", "NewsFeed").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NewsFeed>("TennisChallengeModel.FK__NewsFeedS__NewsF__2B2A60FE", "NewsFeed").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NewsFeed> NewsFeedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NewsFeed>("TennisChallengeModel.FK__NewsFeedS__NewsF__2B2A60FE", "NewsFeed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NewsFeed>("TennisChallengeModel.FK__NewsFeedS__NewsF__2B2A60FE", "NewsFeed", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="RankedGame")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RankedGame : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RankedGame object.
        /// </summary>
        /// <param name="rankedGameKey">Initial value of the RankedGameKey property.</param>
        public static RankedGame CreateRankedGame(global::System.Guid rankedGameKey)
        {
            RankedGame rankedGame = new RankedGame();
            rankedGame.RankedGameKey = rankedGameKey;
            return rankedGame;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RankedGameKey
        {
            get
            {
                return _RankedGameKey;
            }
            set
            {
                if (_RankedGameKey != value)
                {
                    OnRankedGameKeyChanging(value);
                    ReportPropertyChanging("RankedGameKey");
                    _RankedGameKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RankedGameKey");
                    OnRankedGameKeyChanged();
                }
            }
        }
        private global::System.Guid _RankedGameKey;
        partial void OnRankedGameKeyChanging(global::System.Guid value);
        partial void OnRankedGameKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BookingFk
        {
            get
            {
                return _BookingFk;
            }
            set
            {
                OnBookingFkChanging(value);
                ReportPropertyChanging("BookingFk");
                _BookingFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingFk");
                OnBookingFkChanged();
            }
        }
        private Nullable<global::System.Guid> _BookingFk;
        partial void OnBookingFkChanging(Nullable<global::System.Guid> value);
        partial void OnBookingFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> WinnerFk
        {
            get
            {
                return _WinnerFk;
            }
            set
            {
                OnWinnerFkChanging(value);
                ReportPropertyChanging("WinnerFk");
                _WinnerFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WinnerFk");
                OnWinnerFkChanged();
            }
        }
        private Nullable<global::System.Guid> _WinnerFk;
        partial void OnWinnerFkChanging(Nullable<global::System.Guid> value);
        partial void OnWinnerFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Player1ScoreFirst
        {
            get
            {
                return _Player1ScoreFirst;
            }
            set
            {
                OnPlayer1ScoreFirstChanging(value);
                ReportPropertyChanging("Player1ScoreFirst");
                _Player1ScoreFirst = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player1ScoreFirst");
                OnPlayer1ScoreFirstChanged();
            }
        }
        private Nullable<global::System.Int32> _Player1ScoreFirst;
        partial void OnPlayer1ScoreFirstChanging(Nullable<global::System.Int32> value);
        partial void OnPlayer1ScoreFirstChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Player2ScoreFirst
        {
            get
            {
                return _Player2ScoreFirst;
            }
            set
            {
                OnPlayer2ScoreFirstChanging(value);
                ReportPropertyChanging("Player2ScoreFirst");
                _Player2ScoreFirst = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player2ScoreFirst");
                OnPlayer2ScoreFirstChanged();
            }
        }
        private Nullable<global::System.Int32> _Player2ScoreFirst;
        partial void OnPlayer2ScoreFirstChanging(Nullable<global::System.Int32> value);
        partial void OnPlayer2ScoreFirstChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Player1ScoreSecond
        {
            get
            {
                return _Player1ScoreSecond;
            }
            set
            {
                OnPlayer1ScoreSecondChanging(value);
                ReportPropertyChanging("Player1ScoreSecond");
                _Player1ScoreSecond = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player1ScoreSecond");
                OnPlayer1ScoreSecondChanged();
            }
        }
        private Nullable<global::System.Int32> _Player1ScoreSecond;
        partial void OnPlayer1ScoreSecondChanging(Nullable<global::System.Int32> value);
        partial void OnPlayer1ScoreSecondChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Player2ScoreSecond
        {
            get
            {
                return _Player2ScoreSecond;
            }
            set
            {
                OnPlayer2ScoreSecondChanging(value);
                ReportPropertyChanging("Player2ScoreSecond");
                _Player2ScoreSecond = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player2ScoreSecond");
                OnPlayer2ScoreSecondChanged();
            }
        }
        private Nullable<global::System.Int32> _Player2ScoreSecond;
        partial void OnPlayer2ScoreSecondChanging(Nullable<global::System.Int32> value);
        partial void OnPlayer2ScoreSecondChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Player1ScoreTie
        {
            get
            {
                return _Player1ScoreTie;
            }
            set
            {
                OnPlayer1ScoreTieChanging(value);
                ReportPropertyChanging("Player1ScoreTie");
                _Player1ScoreTie = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player1ScoreTie");
                OnPlayer1ScoreTieChanged();
            }
        }
        private Nullable<global::System.Int32> _Player1ScoreTie;
        partial void OnPlayer1ScoreTieChanging(Nullable<global::System.Int32> value);
        partial void OnPlayer1ScoreTieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Player2ScoreTie
        {
            get
            {
                return _Player2ScoreTie;
            }
            set
            {
                OnPlayer2ScoreTieChanging(value);
                ReportPropertyChanging("Player2ScoreTie");
                _Player2ScoreTie = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player2ScoreTie");
                OnPlayer2ScoreTieChanged();
            }
        }
        private Nullable<global::System.Int32> _Player2ScoreTie;
        partial void OnPlayer2ScoreTieChanging(Nullable<global::System.Int32> value);
        partial void OnPlayer2ScoreTieChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__RankedGam__Booki__4E3E9311", "Booking")]
        public Booking BookingBase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("TennisChallengeModel.FK__RankedGam__Booki__4E3E9311", "Booking").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("TennisChallengeModel.FK__RankedGam__Booki__4E3E9311", "Booking").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Booking> BookingBaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("TennisChallengeModel.FK__RankedGam__Booki__4E3E9311", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Booking>("TennisChallengeModel.FK__RankedGam__Booki__4E3E9311", "Booking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__RankedGam__Winne__4F32B74A", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__RankedGam__Winne__4F32B74A", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__RankedGam__Winne__4F32B74A", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__RankedGam__Winne__4F32B74A", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("TennisChallengeModel.FK__RankedGam__Winne__4F32B74A", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="RankedMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RankedMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RankedMember object.
        /// </summary>
        /// <param name="rankedMemberKey">Initial value of the RankedMemberKey property.</param>
        /// <param name="rankedMemberFk">Initial value of the RankedMemberFk property.</param>
        public static RankedMember CreateRankedMember(global::System.Guid rankedMemberKey, global::System.Guid rankedMemberFk)
        {
            RankedMember rankedMember = new RankedMember();
            rankedMember.RankedMemberKey = rankedMemberKey;
            rankedMember.RankedMemberFk = rankedMemberFk;
            return rankedMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RankedMemberKey
        {
            get
            {
                return _RankedMemberKey;
            }
            set
            {
                if (_RankedMemberKey != value)
                {
                    OnRankedMemberKeyChanging(value);
                    ReportPropertyChanging("RankedMemberKey");
                    _RankedMemberKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RankedMemberKey");
                    OnRankedMemberKeyChanged();
                }
            }
        }
        private global::System.Guid _RankedMemberKey;
        partial void OnRankedMemberKeyChanging(global::System.Guid value);
        partial void OnRankedMemberKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RankedMemberFk
        {
            get
            {
                return _RankedMemberFk;
            }
            set
            {
                OnRankedMemberFkChanging(value);
                ReportPropertyChanging("RankedMemberFk");
                _RankedMemberFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankedMemberFk");
                OnRankedMemberFkChanged();
            }
        }
        private global::System.Guid _RankedMemberFk;
        partial void OnRankedMemberFkChanging(global::System.Guid value);
        partial void OnRankedMemberFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClubRank
        {
            get
            {
                return _ClubRank;
            }
            set
            {
                OnClubRankChanging(value);
                ReportPropertyChanging("ClubRank");
                _ClubRank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubRank");
                OnClubRankChanged();
            }
        }
        private Nullable<global::System.Int32> _ClubRank;
        partial void OnClubRankChanging(Nullable<global::System.Int32> value);
        partial void OnClubRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FormerClubRank
        {
            get
            {
                return _FormerClubRank;
            }
            set
            {
                OnFormerClubRankChanging(value);
                ReportPropertyChanging("FormerClubRank");
                _FormerClubRank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormerClubRank");
                OnFormerClubRankChanged();
            }
        }
        private Nullable<global::System.Int32> _FormerClubRank;
        partial void OnFormerClubRankChanging(Nullable<global::System.Int32> value);
        partial void OnFormerClubRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SwissTennisRank
        {
            get
            {
                return _SwissTennisRank;
            }
            set
            {
                OnSwissTennisRankChanging(value);
                ReportPropertyChanging("SwissTennisRank");
                _SwissTennisRank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SwissTennisRank");
                OnSwissTennisRankChanged();
            }
        }
        private Nullable<global::System.Int32> _SwissTennisRank;
        partial void OnSwissTennisRankChanging(Nullable<global::System.Int32> value);
        partial void OnSwissTennisRankChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__RankedMem__Ranke__45A94D10", "UsersInClub")]
        public UsersInClub UsersInClub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsersInClub>("TennisChallengeModel.FK__RankedMem__Ranke__45A94D10", "UsersInClub").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsersInClub>("TennisChallengeModel.FK__RankedMem__Ranke__45A94D10", "UsersInClub").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsersInClub> UsersInClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsersInClub>("TennisChallengeModel.FK__RankedMem__Ranke__45A94D10", "UsersInClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsersInClub>("TennisChallengeModel.FK__RankedMem__Ranke__45A94D10", "UsersInClub", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Rfid")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rfid : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rfid object.
        /// </summary>
        /// <param name="rfidKey">Initial value of the RfidKey property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static Rfid CreateRfid(global::System.Guid rfidKey, global::System.String id, global::System.Boolean active)
        {
            Rfid rfid = new Rfid();
            rfid.RfidKey = rfidKey;
            rfid.Id = id;
            rfid.Active = active;
            return rfid;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RfidKey
        {
            get
            {
                return _RfidKey;
            }
            set
            {
                if (_RfidKey != value)
                {
                    OnRfidKeyChanging(value);
                    ReportPropertyChanging("RfidKey");
                    _RfidKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RfidKey");
                    OnRfidKeyChanged();
                }
            }
        }
        private global::System.Guid _RfidKey;
        partial void OnRfidKeyChanging(global::System.Guid value);
        partial void OnRfidKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MemberFk
        {
            get
            {
                return _MemberFk;
            }
            set
            {
                OnMemberFkChanging(value);
                ReportPropertyChanging("MemberFk");
                _MemberFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberFk");
                OnMemberFkChanged();
            }
        }
        private Nullable<global::System.Guid> _MemberFk;
        partial void OnMemberFkChanging(Nullable<global::System.Guid> value);
        partial void OnMemberFkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_Rfid_Member", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_Rfid_Member", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_Rfid_Member", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK_Rfid_Member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("TennisChallengeModel.FK_Rfid_Member", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName)
        {
            Role role = new Role();
            role.ApplicationId = applicationId;
            role.RoleId = roleId;
            role.RoleName = roleName;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "UsersInClubRole", "UsersInClub")]
        public EntityCollection<UsersInClub> UsersInClub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInClub>("TennisChallengeModel.UsersInClubRole", "UsersInClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInClub>("TennisChallengeModel.UsersInClubRole", "UsersInClub", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Title : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Title object.
        /// </summary>
        /// <param name="titleKey">Initial value of the TitleKey property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Title CreateTitle(global::System.Int16 titleKey, global::System.String name)
        {
            Title title = new Title();
            title.TitleKey = titleKey;
            title.Name = name;
            return title;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TitleKey
        {
            get
            {
                return _TitleKey;
            }
            set
            {
                if (_TitleKey != value)
                {
                    OnTitleKeyChanging(value);
                    ReportPropertyChanging("TitleKey");
                    _TitleKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleKey");
                    OnTitleKeyChanged();
                }
            }
        }
        private global::System.Int16 _TitleKey;
        partial void OnTitleKeyChanging(global::System.Int16 value);
        partial void OnTitleKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK_Member_Title", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("TennisChallengeModel.FK_Member_Title", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("TennisChallengeModel.FK_Member_Title", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="Tournament")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tournament : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tournament object.
        /// </summary>
        /// <param name="tournamentId">Initial value of the TournamentId property.</param>
        /// <param name="closed">Initial value of the Closed property.</param>
        public static Tournament CreateTournament(global::System.Guid tournamentId, global::System.Boolean closed)
        {
            Tournament tournament = new Tournament();
            tournament.TournamentId = tournamentId;
            tournament.Closed = closed;
            return tournament;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TournamentId
        {
            get
            {
                return _TournamentId;
            }
            set
            {
                if (_TournamentId != value)
                {
                    OnTournamentIdChanging(value);
                    ReportPropertyChanging("TournamentId");
                    _TournamentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TournamentId");
                    OnTournamentIdChanged();
                }
            }
        }
        private global::System.Guid _TournamentId;
        partial void OnTournamentIdChanging(global::System.Guid value);
        partial void OnTournamentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TournamentType
        {
            get
            {
                return _TournamentType;
            }
            set
            {
                OnTournamentTypeChanging(value);
                ReportPropertyChanging("TournamentType");
                _TournamentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentType");
                OnTournamentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _TournamentType;
        partial void OnTournamentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnTournamentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private Nullable<global::System.Int32> _Mode;
        partial void OnModeChanging(Nullable<global::System.Int32> value);
        partial void OnModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TournamentOpen
        {
            get
            {
                return _TournamentOpen;
            }
            set
            {
                OnTournamentOpenChanging(value);
                ReportPropertyChanging("TournamentOpen");
                _TournamentOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentOpen");
                OnTournamentOpenChanged();
            }
        }
        private Nullable<global::System.Int32> _TournamentOpen;
        partial void OnTournamentOpenChanging(Nullable<global::System.Int32> value);
        partial void OnTournamentOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TournComment
        {
            get
            {
                return _TournComment;
            }
            set
            {
                OnTournCommentChanging(value);
                ReportPropertyChanging("TournComment");
                _TournComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TournComment");
                OnTournCommentChanged();
            }
        }
        private global::System.String _TournComment;
        partial void OnTournCommentChanging(global::System.String value);
        partial void OnTournCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Closed
        {
            get
            {
                return _Closed;
            }
            set
            {
                OnClosedChanging(value);
                ReportPropertyChanging("Closed");
                _Closed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Closed");
                OnClosedChanged();
            }
        }
        private global::System.Boolean _Closed;
        partial void OnClosedChanging(global::System.Boolean value);
        partial void OnClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LinkUrl
        {
            get
            {
                return _LinkUrl;
            }
            set
            {
                OnLinkUrlChanging(value);
                ReportPropertyChanging("LinkUrl");
                _LinkUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LinkUrl");
                OnLinkUrlChanged();
            }
        }
        private global::System.String _LinkUrl;
        partial void OnLinkUrlChanging(global::System.String value);
        partial void OnLinkUrlChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__BookingBa__Tourn__770B9E7A", "Booking")]
        public EntityCollection<Booking> BookingBases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("TennisChallengeModel.FK__BookingBa__Tourn__770B9E7A", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("TennisChallengeModel.FK__BookingBa__Tourn__770B9E7A", "Booking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Member__Tourname__77FFC2B3", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("TennisChallengeModel.FK__Member__Tourname__77FFC2B3", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("TennisChallengeModel.FK__Member__Tourname__77FFC2B3", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Tournamen__Ladde__76177A41", "TournamentLadder")]
        public TournamentLadder TournamentLadder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TournamentLadder>("TennisChallengeModel.FK__Tournamen__Ladde__76177A41", "TournamentLadder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TournamentLadder>("TennisChallengeModel.FK__Tournamen__Ladde__76177A41", "TournamentLadder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TournamentLadder> TournamentLadderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TournamentLadder>("TennisChallengeModel.FK__Tournamen__Ladde__76177A41", "TournamentLadder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TournamentLadder>("TennisChallengeModel.FK__Tournamen__Ladde__76177A41", "TournamentLadder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Tournamen__Tourn__1960B67E", "TournamentMember")]
        public EntityCollection<TournamentMember> TournamentMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TournamentMember>("TennisChallengeModel.FK__Tournamen__Tourn__1960B67E", "TournamentMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TournamentMember>("TennisChallengeModel.FK__Tournamen__Tourn__1960B67E", "TournamentMember", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="TournamentLadder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TournamentLadder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TournamentLadder object.
        /// </summary>
        /// <param name="ladderId">Initial value of the LadderId property.</param>
        public static TournamentLadder CreateTournamentLadder(global::System.Guid ladderId)
        {
            TournamentLadder tournamentLadder = new TournamentLadder();
            tournamentLadder.LadderId = ladderId;
            return tournamentLadder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LadderId
        {
            get
            {
                return _LadderId;
            }
            set
            {
                if (_LadderId != value)
                {
                    OnLadderIdChanging(value);
                    ReportPropertyChanging("LadderId");
                    _LadderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LadderId");
                    OnLadderIdChanged();
                }
            }
        }
        private global::System.Guid _LadderId;
        partial void OnLadderIdChanging(global::System.Guid value);
        partial void OnLadderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String List
        {
            get
            {
                return _List;
            }
            set
            {
                OnListChanging(value);
                ReportPropertyChanging("List");
                _List = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("List");
                OnListChanged();
            }
        }
        private global::System.String _List;
        partial void OnListChanging(global::System.String value);
        partial void OnListChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Tournamen__Ladde__76177A41", "Tournament")]
        public Tournament Tournament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__Tournamen__Ladde__76177A41", "Tournament").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__Tournamen__Ladde__76177A41", "Tournament").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tournament> TournamentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__Tournamen__Ladde__76177A41", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tournament>("TennisChallengeModel.FK__Tournamen__Ladde__76177A41", "Tournament", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="TournamentMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TournamentMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TournamentMember object.
        /// </summary>
        /// <param name="tMemberId">Initial value of the TMemberId property.</param>
        /// <param name="memberFk">Initial value of the MemberFk property.</param>
        /// <param name="tournamentFk">Initial value of the TournamentFk property.</param>
        public static TournamentMember CreateTournamentMember(global::System.Guid tMemberId, global::System.Guid memberFk, global::System.Guid tournamentFk)
        {
            TournamentMember tournamentMember = new TournamentMember();
            tournamentMember.TMemberId = tMemberId;
            tournamentMember.MemberFk = memberFk;
            tournamentMember.TournamentFk = tournamentFk;
            return tournamentMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TMemberId
        {
            get
            {
                return _TMemberId;
            }
            set
            {
                if (_TMemberId != value)
                {
                    OnTMemberIdChanging(value);
                    ReportPropertyChanging("TMemberId");
                    _TMemberId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TMemberId");
                    OnTMemberIdChanged();
                }
            }
        }
        private global::System.Guid _TMemberId;
        partial void OnTMemberIdChanging(global::System.Guid value);
        partial void OnTMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MemberFk
        {
            get
            {
                return _MemberFk;
            }
            set
            {
                OnMemberFkChanging(value);
                ReportPropertyChanging("MemberFk");
                _MemberFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberFk");
                OnMemberFkChanged();
            }
        }
        private global::System.Guid _MemberFk;
        partial void OnMemberFkChanging(global::System.Guid value);
        partial void OnMemberFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TournamentFk
        {
            get
            {
                return _TournamentFk;
            }
            set
            {
                OnTournamentFkChanging(value);
                ReportPropertyChanging("TournamentFk");
                _TournamentFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentFk");
                OnTournamentFkChanged();
            }
        }
        private global::System.Guid _TournamentFk;
        partial void OnTournamentFkChanging(global::System.Guid value);
        partial void OnTournamentFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TournamentPoints
        {
            get
            {
                return _TournamentPoints;
            }
            set
            {
                OnTournamentPointsChanging(value);
                ReportPropertyChanging("TournamentPoints");
                _TournamentPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentPoints");
                OnTournamentPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _TournamentPoints;
        partial void OnTournamentPointsChanging(Nullable<global::System.Int32> value);
        partial void OnTournamentPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<global::System.Guid> _TeamId;
        partial void OnTeamIdChanging(Nullable<global::System.Guid> value);
        partial void OnTeamIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Tournamen__Membe__186C9245", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__Tournamen__Membe__186C9245", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__Tournamen__Membe__186C9245", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__Tournamen__Membe__186C9245", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("TennisChallengeModel.FK__Tournamen__Membe__186C9245", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Tournamen__Tourn__1960B67E", "Tournament")]
        public Tournament Tournament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__Tournamen__Tourn__1960B67E", "Tournament").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__Tournamen__Tourn__1960B67E", "Tournament").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tournament> TournamentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("TennisChallengeModel.FK__Tournamen__Tourn__1960B67E", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tournament>("TennisChallengeModel.FK__Tournamen__Tourn__1960B67E", "Tournament", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static User CreateUser(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            User user = new User();
            user.ApplicationId = applicationId;
            user.UserId = userId;
            user.UserName = userName;
            user.IsAnonymous = isAnonymous;
            user.LastActivityDate = lastActivityDate;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__Member__Users", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__Member__Users", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__Member__Users", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("TennisChallengeModel.FK__Member__Users", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("TennisChallengeModel.FK__Member__Users", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__UsersInCl__UserF__7D98A078", "UsersInClub")]
        public EntityCollection<UsersInClub> UsersInClubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInClub>("TennisChallengeModel.FK__UsersInCl__UserF__7D98A078", "UsersInClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInClub>("TennisChallengeModel.FK__UsersInCl__UserF__7D98A078", "UsersInClub", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="UserAd")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAd : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAd object.
        /// </summary>
        /// <param name="userAdId">Initial value of the UserAdId property.</param>
        public static UserAd CreateUserAd(global::System.Guid userAdId)
        {
            UserAd userAd = new UserAd();
            userAd.UserAdId = userAdId;
            return userAd;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserAdId
        {
            get
            {
                return _UserAdId;
            }
            set
            {
                if (_UserAdId != value)
                {
                    OnUserAdIdChanging(value);
                    ReportPropertyChanging("UserAdId");
                    _UserAdId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserAdId");
                    OnUserAdIdChanged();
                }
            }
        }
        private global::System.Guid _UserAdId;
        partial void OnUserAdIdChanging(global::System.Guid value);
        partial void OnUserAdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserInClubFk
        {
            get
            {
                return _UserInClubFk;
            }
            set
            {
                OnUserInClubFkChanging(value);
                ReportPropertyChanging("UserInClubFk");
                _UserInClubFk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserInClubFk");
                OnUserInClubFkChanged();
            }
        }
        private Nullable<global::System.Guid> _UserInClubFk;
        partial void OnUserInClubFkChanging(Nullable<global::System.Guid> value);
        partial void OnUserInClubFkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdText
        {
            get
            {
                return _AdText;
            }
            set
            {
                OnAdTextChanging(value);
                ReportPropertyChanging("AdText");
                _AdText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdText");
                OnAdTextChanged();
            }
        }
        private global::System.String _AdText;
        partial void OnAdTextChanging(global::System.String value);
        partial void OnAdTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdType
        {
            get
            {
                return _AdType;
            }
            set
            {
                OnAdTypeChanging(value);
                ReportPropertyChanging("AdType");
                _AdType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdType");
                OnAdTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _AdType;
        partial void OnAdTypeChanging(Nullable<global::System.Int32> value);
        partial void OnAdTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationTime;
        partial void OnCreationTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__UserAd__UserInCl__7246E95D", "UsersInClub")]
        public UsersInClub UsersInClub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsersInClub>("TennisChallengeModel.FK__UserAd__UserInCl__7246E95D", "UsersInClub").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsersInClub>("TennisChallengeModel.FK__UserAd__UserInCl__7246E95D", "UsersInClub").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsersInClub> UsersInClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsersInClub>("TennisChallengeModel.FK__UserAd__UserInCl__7246E95D", "UsersInClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsersInClub>("TennisChallengeModel.FK__UserAd__UserInCl__7246E95D", "UsersInClub", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TennisChallengeModel", Name="UsersInClub")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersInClub : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersInClub object.
        /// </summary>
        /// <param name="usersInClubsKey">Initial value of the UsersInClubsKey property.</param>
        /// <param name="userFK">Initial value of the UserFK property.</param>
        /// <param name="clubFK">Initial value of the ClubFK property.</param>
        public static UsersInClub CreateUsersInClub(global::System.Guid usersInClubsKey, global::System.Guid userFK, global::System.Guid clubFK)
        {
            UsersInClub usersInClub = new UsersInClub();
            usersInClub.UsersInClubsKey = usersInClubsKey;
            usersInClub.UserFK = userFK;
            usersInClub.ClubFK = clubFK;
            return usersInClub;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UsersInClubsKey
        {
            get
            {
                return _UsersInClubsKey;
            }
            set
            {
                if (_UsersInClubsKey != value)
                {
                    OnUsersInClubsKeyChanging(value);
                    ReportPropertyChanging("UsersInClubsKey");
                    _UsersInClubsKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UsersInClubsKey");
                    OnUsersInClubsKeyChanged();
                }
            }
        }
        private global::System.Guid _UsersInClubsKey;
        partial void OnUsersInClubsKeyChanging(global::System.Guid value);
        partial void OnUsersInClubsKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserFK
        {
            get
            {
                return _UserFK;
            }
            set
            {
                OnUserFKChanging(value);
                ReportPropertyChanging("UserFK");
                _UserFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserFK");
                OnUserFKChanged();
            }
        }
        private global::System.Guid _UserFK;
        partial void OnUserFKChanging(global::System.Guid value);
        partial void OnUserFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClubFK
        {
            get
            {
                return _ClubFK;
            }
            set
            {
                OnClubFKChanging(value);
                ReportPropertyChanging("ClubFK");
                _ClubFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubFK");
                OnClubFKChanged();
            }
        }
        private global::System.Guid _ClubFK;
        partial void OnClubFKChanging(global::System.Guid value);
        partial void OnClubFKChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__UsersInCl__ClubF__7E8CC4B1", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK__UsersInCl__ClubF__7E8CC4B1", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK__UsersInCl__ClubF__7E8CC4B1", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("TennisChallengeModel.FK__UsersInCl__ClubF__7E8CC4B1", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("TennisChallengeModel.FK__UsersInCl__ClubF__7E8CC4B1", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__UsersInCl__UserF__7D98A078", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TennisChallengeModel.FK__UsersInCl__UserF__7D98A078", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TennisChallengeModel.FK__UsersInCl__UserF__7D98A078", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TennisChallengeModel.FK__UsersInCl__UserF__7D98A078", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TennisChallengeModel.FK__UsersInCl__UserF__7D98A078", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "UsersInClubRole", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("TennisChallengeModel.UsersInClubRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("TennisChallengeModel.UsersInClubRole", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__RankedMem__Ranke__45A94D10", "RankedMember")]
        public EntityCollection<RankedMember> RankedMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RankedMember>("TennisChallengeModel.FK__RankedMem__Ranke__45A94D10", "RankedMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RankedMember>("TennisChallengeModel.FK__RankedMem__Ranke__45A94D10", "RankedMember", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TennisChallengeModel", "FK__UserAd__UserInCl__7246E95D", "UserAd")]
        public EntityCollection<UserAd> UserAds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAd>("TennisChallengeModel.FK__UserAd__UserInCl__7246E95D", "UserAd");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAd>("TennisChallengeModel.FK__UserAd__UserInCl__7246E95D", "UserAd", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
